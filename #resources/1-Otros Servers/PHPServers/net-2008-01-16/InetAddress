<?php
// Require class
require_once("exception/UnknownHostException.php");

/**
 * Address representation
 * Used to create objects of the address based in a hostname or ip
 * passed for statics methods
 * 
 * @author		Gustavo Gomes
 * @copyright	2006-08-04
 */
class InetAddress {
	
	private $address = "";
	
	private $hostName = "";
	
	/**
	 * Constructor
	 * Used to the statics methods
	 * 
	 * @param	string $host
	 * @param	string $address
	 */
	private function __construct($host="",$address="") {
		$this->hostName = $host;
		$this->address = $address;
	}
	
	public function getAddress() {
		return $this->address;
	}
	
	public function getHostName() {
		return $this->hostName;
	}
	
	/**
	 * Gets InetAddress object through to the address (IP)
	 * 
	 * @param	string $addr
	 * @return	InetAddress
	 * @throws	UnknownHostException - if the address not found or unresolved
	 */
	public static function getByAddress($addr) {
		if (($host = @gethostbyaddr($addr)) == $addr)
			throw new UnknownHostException($addr);
		return new InetAddress($host,$addr);
	}
	
	/**
	 * Gets InetAddress object through to the Hostname
	 * 
	 * @param	string $host
	 * @return	InetAddress
	 * @throws	UnknownHostException - if the address not found or unresolved
	 */
	public static function getByName($host) {
		if (($ip = @gethostbyname($host)) == $host)
			throw new UnknownHostException($host);
		return new InetAddress($host,$ip);
	}
	
	/**
	 * Gets InetAddress objects in array for the Hostname specified
	 * 
	 * @param	string $host
	 * @return	array
	 * @throws	UnknownHostException - if the address not found or unresolved
	 */
	public static function getAllByName($host) {
		if (($ips = @gethostbynamel($host)) == false) {
			throw new UnknownHostException($host);
		} else {
			$iaddr = array();
			for ($i = 0;$i < count($ips);$i++)
				$iaddr[] = new InetAddress($host,$ips[$i]);
			return $iaddr;
		}
	}
	
	/**
	 * Gets InetAddress object of the localhost
	 * 
	 * @return	InetAddress
	 * @throws	UnknownHostException - if the address not found or unresolved
	 */
	public static function getLocalHost() {
		return self::getByName("localhost");
	}
}
?>
